name: CD Workflow

on:
  workflow_run:
    workflows: ["CI Workflow"]
    types:
      - completed

jobs:

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Delete previous files on EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_PUBLIC_IP }} "rm -f ~/peso/docker-compose.yml"

      - name: Copy docker-compose.yml to EC2
        run: |
          scp docker-compose.yml ubuntu@${{ secrets.EC2_PUBLIC_IP }}:~/peso/docker-compose.yml

      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 072216710152.dkr.ecr.sa-east-1.amazonaws.com
            cd ~/peso
            docker-compose pull
            docker image prune -f
            docker-compose up -d
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
