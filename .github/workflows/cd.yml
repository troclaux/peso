name: cd

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  docker-build-and-push:
    name: build and push docker images
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}

    steps:

      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: build, tag, and push next.js docker image
        id: docker-push-nextjs
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: peso-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:nextjs-$IMAGE_TAG \
            -t $REGISTRY/$REPOSITORY:nextjs-latest \
            -f ./Dockerfile \
            .
          docker push $REGISTRY/$REPOSITORY:nextjs-$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:nextjs-latest

      - name: build, tag, and push nginx docker image
        id: docker-push-nginx
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: peso-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build \
            -t $REGISTRY/$REPOSITORY:nginx-$IMAGE_TAG \
            -t $REGISTRY/$REPOSITORY:nginx-latest \
            -f ./nginx/Dockerfile \
            ./nginx
          docker push $REGISTRY/$REPOSITORY:nginx-$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:nginx-latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    outputs:
      ec2_ip: ${{ steps.get_ip.outputs.ec2_ip }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Delete previous files on EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_PUBLIC_IP }} "rm -f ~/peso/docker-compose.yml"

      - name: Copy docker-compose.yml to EC2
        run: |
          scp docker-compose.yml ubuntu@${{ secrets.EC2_PUBLIC_IP }}:~/peso/docker-compose.yml

      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            aws ecr get-login-password --region sa-east-1 | docker login --username AWS --password-stdin 072216710152.dkr.ecr.sa-east-1.amazonaws.com
            cd ~/peso
            docker-compose pull
            docker image prune -f
            docker-compose up -d
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
